/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.lxh.myzngt.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.actions.DispatchAction;
import org.lxh.myzngt.dao.IAdminDAO;
import org.lxh.myzngt.struts.form.AdminForm;
import org.lxh.myzngt.util.MD5Code;
import org.lxh.myzngt.vo.Admin;

/**
 * MyEclipse Struts Creation date: 07-03-2007
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/admin" name="adminForm" input="/form/admin.jsp"
 *                parameter="status" scope="request" validate="true"
 */
public class AdminAction extends DispatchAction {
	private IAdminDAO iadmindao;

	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward insert(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AdminForm adminForm = (AdminForm) form;
		String ccode = (String) request.getSession().getAttribute("ccode");
		String checkcode = adminForm.getCheckcode();
		if (!(checkcode.equals(ccode))) {
			ActionMessages errors = new ActionMessages();
			errors.add("checkcode", new ActionMessage("checkcode.error"));
			super.saveErrors(request, errors);
			return mapping.getInputForward();
		}
		// 判断是否重名
		try {
			if (this.iadmindao.isExists(adminForm.getAdminid())) {
				// 用户存在
				ActionMessages errors = new ActionMessages();
				errors.add("exist", new ActionMessage("admin.adminid.exist"));
				super.saveErrors(request, errors);
				return mapping.getInputForward();
			} else {
				Admin admin = new Admin();
				MD5Code md5 = new MD5Code();
				admin.setAdminid(adminForm.getAdminid());
				admin.setAdminpwd(md5.getMD5ofStr(adminForm.getAdminpwd()));
				this.iadmindao.insert(admin);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mapping.findForward("insertdo");
	}

	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AdminForm adminForm = (AdminForm) form;
		try {
			this.iadmindao.delete(adminForm.getAdminid());
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return mapping.findForward("deletedo");
	}

	public ActionForward updatepwd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AdminForm adminForm = (AdminForm) form;
		String ccode = (String) request.getSession().getAttribute("ccode");
		String checkcode = adminForm.getCheckcode();
		if (!(checkcode.equals(ccode))) {
			ActionMessages errors = new ActionMessages();
			errors.add("checkcode", new ActionMessage("checkcode.error"));
			super.saveErrors(request, errors);
			return mapping.getInputForward();
		}
		// 需要先判断密码是否正确
		boolean flag = false;
		MD5Code md5 = new MD5Code();
		String adminid = (String) request.getSession().getAttribute("adminid");
		try {
			flag = this.iadmindao.checkOldpwd(adminid, md5
					.getMD5ofStr(adminForm.getOldpwd()));
		} catch (Exception e) {
			e.printStackTrace();
		}
		if (flag) {
			// 旧密码合格
			try {
				this.iadmindao.updatepwd(adminid, md5.getMD5ofStr(adminForm
						.getAdminpwd()));
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			return mapping.findForward("updatepwddo");
		} else {
			request.setAttribute("flag", "error");
			return mapping.findForward("updatepwdfailure");
		}

	}

	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		List all = null;
		try {
			all = this.iadmindao.queryAll();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		request.setAttribute("all", all);
		return mapping.findForward("list");
	}

	public IAdminDAO getIadmindao() {
		return iadmindao;
	}

	public void setIadmindao(IAdminDAO iadmindao) {
		this.iadmindao = iadmindao;
	}
}