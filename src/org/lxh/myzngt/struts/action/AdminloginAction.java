/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.lxh.myzngt.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.actions.DispatchAction;
import org.lxh.myzngt.dao.IAdminDAO;
import org.lxh.myzngt.struts.form.AdminloginForm;
import org.lxh.myzngt.util.MD5Code;
import org.lxh.myzngt.vo.Admin;

/**
 * MyEclipse Struts Creation date: 07-03-2007
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/adminlogin" name="adminloginForm"
 *                input="/form/adminlogin.jsp" parameter="status"
 *                scope="request" validate="true"
 */
public class AdminloginAction extends DispatchAction {
	private IAdminDAO iadmindao ;
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request 
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward login(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AdminloginForm adminForm = (AdminloginForm) form;
		String ccode = (String) request.getSession().getAttribute("ccode");
		String checkcode = adminForm.getCheckcode();
		if (!(checkcode.equals(ccode))) {
			ActionMessages errors = new ActionMessages();
			errors.add("checkcode", new ActionMessage("checkcode.error"));
			super.saveErrors(request, errors);
			return mapping.getInputForward();
		}
		Admin admin = new Admin();
		MD5Code md5 = new MD5Code();
		admin.setAdminid(adminForm.getAdminid());
		admin.setAdminpwd(md5.getMD5ofStr(adminForm.getAdminpwd()));
		boolean flag = false;
		try {
			flag = this.iadmindao.login(admin);
		} catch (Exception e) {
			e.printStackTrace();
		}
		if (flag) {
			request.getSession().setAttribute("adminid", admin.getAdminid());
			return mapping.findForward("loginsuccess");
		} else {
			request.setAttribute("flag", "error");
			return mapping.findForward("loginfailure");
		}
	}

	public IAdminDAO getIadmindao() {
		return iadmindao;
	}

	public void setIadmindao(IAdminDAO iadmindao) {
		this.iadmindao = iadmindao;
	}
}