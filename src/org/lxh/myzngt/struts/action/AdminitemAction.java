/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.lxh.myzngt.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.lxh.myzngt.dao.IItemDAO;
import org.lxh.myzngt.struts.form.AdminitemForm;
import org.lxh.myzngt.vo.Item;

/**
 * MyEclipse Struts Creation date: 07-03-2007
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/adminitem" name="adminitemForm"
 *                input="/form/adminitem.jsp" parameter="status" scope="request"
 *                validate="true"
 */
public class AdminitemAction extends DispatchAction {
	private IItemDAO iitemdao;

	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AdminitemForm adminitemForm = (AdminitemForm) form;
		List all = null;
		try {
			all = this.iitemdao.queryAll();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		request.setAttribute("all", all);
		return mapping.findForward("itemlist");
	}

	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AdminitemForm adminitemForm = (AdminitemForm) form;
		Item item = new Item();
		item.setItemid(Integer.parseInt(adminitemForm.getItemid()));
		item.setItemname(adminitemForm.getItemname());
		item.setItemcode(Integer.parseInt(adminitemForm.getItemcode()));
		try {
			this.iitemdao.update(item);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return mapping.findForward("list");
	}

	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AdminitemForm adminitemForm = (AdminitemForm) form;
		try {
			this.iitemdao.delete(Integer.parseInt(adminitemForm.getItemid()));
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return mapping.findForward("list");
	}

	public ActionForward insert(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AdminitemForm adminitemForm = (AdminitemForm) form;
		Item item = new Item();
		item.setItemname(adminitemForm.getItemname());
		item.setItemcode(Integer.parseInt(adminitemForm.getItemcode()));
		try {
			this.iitemdao.insert(item);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return mapping.findForward("list");
	}

	public ActionForward selectid(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AdminitemForm adminitemForm = (AdminitemForm) form;
		Item item = null;
		try {
			item = this.iitemdao.queryById(Integer.parseInt(adminitemForm.getItemid())) ;
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		request.setAttribute("item", item);
		return mapping.findForward("subitemlist");
	}

	public IItemDAO getIitemdao() {
		return iitemdao;
	}

	public void setIitemdao(IItemDAO iitemdao) {
		this.iitemdao = iitemdao;
	}
}