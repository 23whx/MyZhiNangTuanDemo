/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.lxh.myzngt.struts.action;

import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.actions.DispatchAction;
import org.lxh.myzngt.dao.IQuestionDAO;
import org.lxh.myzngt.struts.form.QuestionForm;
import org.lxh.myzngt.vo.Question;

/**
 * MyEclipse Struts Creation date: 07-01-2007
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/question" name="questionForm"
 *                input="/form/question.jsp" scope="request" validate="true"
 */
public class QuestionAction extends DispatchAction {
	private IQuestionDAO iquestiondao;

	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward insert(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		QuestionForm questionForm = (QuestionForm) form;
		String ccode = (String) request.getSession().getAttribute("ccode");
		String checkcode = questionForm.getCheckcode();
		if (!(checkcode.equals(ccode))) {
			ActionMessages errors = new ActionMessages();
			errors.add("checkcode", new ActionMessage("checkcode.error"));
			super.saveErrors(request, errors);
			return mapping.getInputForward();
		}
		Question que = new Question();
		que.setTitle(questionForm.getTitle());
		que.setContent(questionForm.getContent());
		que.setItemid(Integer.parseInt(questionForm.getItemid()));
		que.setSubid(Integer.parseInt(questionForm.getSubid()));
		que.setGrade(org.lxh.myzngt.util.IntegralGrade.getInstance()
				.getGradeInfo(Integer.parseInt(questionForm.getGrade())));
		que.setUserid(questionForm.getUserid());
		que.setOfferscore(Integer.parseInt(questionForm.getOfferscore()));
		que.setQuestiontime(new Date());
		que.setStatus(1);
		que.setAcceptflag(2);
		que.setCommenflag(0);
		try {
			this.iquestiondao.insert(que);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return mapping.findForward("insertdo");
	}

	public ActionForward selectid(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
//		QuestionForm questionForm = (QuestionForm) form;
//		Question q = null;
//		try {
//			// 更新浏览次数
//			this.iquestiondao.updateClickcount(Integer.parseInt(questionForm
//					.getQid()));
//			q = this.iquestiondao.queryById(Integer.parseInt(questionForm
//					.getQid()));
//		} catch (Exception e) {
//			e.printStackTrace();
//		}
//		if (q != null) {
//			request.setAttribute("question", q);
//		}
//
		return mapping.findForward("showquestion");
	}

	public ActionForward aa(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		QuestionForm questionForm = (QuestionForm) form;
		return null;
	}

	public IQuestionDAO getIquestiondao() {
		return iquestiondao;
	}

	public void setIquestiondao(IQuestionDAO iquestiondao) {
		this.iquestiondao = iquestiondao;
	}
}